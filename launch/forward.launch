<launch>
  <node pkg="rosbag" type="play" name="rosbagplay" args="/media/ubuntu/491dac4f-219f-463a-8342-3e177e5dd7b3/tanashi/OK.bag --clock -d 5 --start 22" respawn="false"/>
  <param name="use_sim_time" value="true"/> <!-- odometry -->
  <arg name="compressed"              default="false"/>         <!-- If you want to subscribe to compressed image topics -->
  <arg name="database_path"           default="/home/ubuntu/rtabmap.db"/>
  <arg name="rgb_image_transport"     default="compressed"/>    <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="depth_image_transport"   default="compressedDepth"/>  <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="localization"   default="false"/>  <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="wait_for_transform" default="0.2"/> <!-- for data delay-->
  <node name="republish1" type="republish" pkg="image_transport" output="screen" args="compressed in:=/camera1/color/image_raw raw out:=/camera1/color/image_raw" />
  <node name="republish" type="republish" pkg="image_transport" output="screen" args="compressed in:=/camera2/color/image_raw raw out:=/camera2/color/image_raw" />

  <node pkg="tf" type="static_transform_publisher" name="base_to_camera1_tf"
      args="0.25 0 0.89 -1.570796327 0.0 -1.570796327 base_link camera1_color_optical_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="base_to_camera2_tf"
      args="-0.25 0.0 0.92 1.570796327 0.0 -1.570796327  base_link camera2_color_optical_frame 100" />
  <!--<node pkg="tf" type="static_transform_publisher" name="base_to_imu_tf" args="0.0 0.0 0.0 -1.570796327 0.0 0.0  base_link gx5_link 100" />-->
  <node pkg="tf" type="static_transform_publisher" name="base_to_imu_tf" args="0.0 0.0 0.0 0.0 0.0 0.0  base_link gx5_link 100" />
  <node pkg="tf" type="static_transform_publisher" name="odom_to_gnss_odom" args="0.0 0.0 0.0 0.0 0.0 0.0  map gnss_odom 100" />

   <group ns="camera1">
    <node pkg="nodelet" type="nodelet" name="nodelet_manager1" args="manager" />
    <node pkg="nodelet" type="nodelet" name="rgbd_sync1" args="load rtabmap_ros/rgbd_sync nodelet_manager1">
      <remap from="rgb/image"       to="color/image_raw"/>
      <remap from="depth/image"     to="aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="color/camera_info"/>
      <param name="approx_sync"          value="true"/>
    </node>
   </group>
   <group ns="camera2">
    <node pkg="nodelet" type="nodelet" name="nodelet_manager1" args="manager" />
    <node pkg="nodelet" type="nodelet" name="rgbd_sync1" args="load rtabmap_ros/rgbd_sync nodelet_manager1">
      <remap from="rgb/image"       to="color/image_raw"/>
      <remap from="depth/image"     to="aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="color/camera_info"/>
      <param name="approx_sync"          value="true"/>
    </node>
   </group>

  <group ns="rtabmap">
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>

   <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <remap from="rgbd_image"       to="/camera1/rgbd_image"/>
      <remap from="rgbd_image1"       to="/camera2/rgbd_image"/>
      <remap from="odom"            to="/vo"/>
       
      <param name="subscribe_rgbd"           type="bool"   value="true"/>
      <param name="Vis/MaxDepth" type="string" value="10.0"/> <!-- odometry -->
      <param name="Vis/MinDepth" type="string" value="0.2"/> <!-- odometry -->
      <param name="approx_sync"          value="true"/>
      <param name="queue_size"          value="10"/>
      <param name="wait_for_transform_duration" type="double" value="0.1"/>
      <param name="frame_id"                 type="string" value="base_link"/>
      <param name="rgbd_cameras"             type="int"    value="1"/>
      <param name="Vis/FeatureType"       type="string" value="8"/>
      <param name="Vis/EstimationType"       type="string" value="1"/>
      <param name="Vis/CorGuessWinSize"       type="string" value="0"/> 
      <param name="Odom/ResetCountdown"    type="string" value="1"/>
      <param name="Reg/Force3DoF"    value="true" />
    </node>

    <!-- Visual SLAM (robot side) -->
    <!-- args: "delete_db_on_start" and "udebug"-->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen"  args="--delete_db_on_start">
      <remap from="odom"            to="/vo"/>
      <param name="subscribe_depth"  type="bool"   value="false"/>
      <param name="subscribe_rgbd"   type="bool"   value="true"/>
      <param name="rgbd_cameras"     type="int"    value="1"/>
      <param name="frame_id"         type="string" value="base_link"/>
      <param name="Optimizer/Strategy" type="string" value="1"/>
      <param name="queue_size"          value="10"/>
      <param name="Kp/DetectorStrategy"    type="string" value="8"/> 
      <param name="Kp/MaxFeatures"    type="string" value="-1"/> 
      <param name="wait_for_transform" type="bool" value="true"/>
      <param name="wait_for_transform_duration" type="double" value="0.2"/>
      <param name="map_negative_scan_empty_ray_tracing" type="bool" value="false"/>
      <param name="publish_tf"  type="bool"   value="true"/>
      <param name="Reg/Force3DoF"    value="true" />
      <param name="RGBD/ProximityMaxGraphDepth" type="double" value="0" />
      <param name="RGBD/ProximityPathFilteringRadius" type="double"   value="1" /> 
      <param name="RGBD/OptimizeFromGraphEnd" type="bool"   value="false" /> 
      <param name="Grid/MaxGroundHeight" type="double" value="9999" />
      <param name="Grid/MinGroundHeight" type="double" value="-9999" />
      <!--<param name="landmark_angular_variance"  type="double" value="9999"/>-->
      <param name="RGBD/OptimizeMaxError" type="string" value="1"/> <!-- should be 0 if RGBD/OptimizeRobust is true -->
      <param name="grid_cell_size" type="double" value="0.10" />
      <param name="Optimizer/PriorsIgnored" value="False"/>    
      <param name="Optimizer/LandmarksIgnored" value="false"/>          
      <param name="database_path"        type="string" value="$(arg database_path)"/>
      <remap from="rgbd_image"       to="/camera1/rgbd_image"/>
      <remap from="rgbd_image1"       to="/camera2/rgbd_image"/>
   </node>
   </group>

  <!-- Visualization RVIZ -->
  <arg name="model" default="$(find sim_ajk)/sim_ajk.urdf"/>
  <arg name="gui" default="True"/>
  <arg name="rvizconfig" default="$(find sim_ajk)/urdf.rviz"/>
 
  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)"/>
  <param name="use_gui" value="$(arg gui)"/>
  <node name="gnss" pkg="robot_mower_2dnav" type="global_pose.py" respawn="false" output="screen"/>  
  <node name="imu_republish" pkg="robot_mower_2dnav" type="imu_republish.py" respawn="false" output="screen"/>  
  <node name="visualize_path" pkg="robot_mower_2dnav" type="visualize_odometry_as_path.py" respawn="false" output="screen"/>  
 
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
 
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find robot_mower_2dnav)/cfg/rviz.rviz"/>
</launch>
